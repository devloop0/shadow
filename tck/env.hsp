import <"stdx/vector">

import "unify.hsp"
import "../parse/parse.hsp"
import "../ast/ast.hsp"
import "../util/symtab.hsp"

namespace shadow { namespace tck {

struct typ_constraint {
	type ast::typ* lhs;
	type ast::typ* rhs;
}

struct scope {
	type util::symtab* sym_2_typ_var;
	type util::symtab* typ_2_typ_var;
	type util::symtab* datatyp_2_typ_var;
	type util::symtab* datatyp_constructor_2_typ_var;
}

struct env {
	type stdx::vector::vector::vector* typ_constraints;
	type scope global_scope;
	type scope current_scope;
	type parse::parser* par;
	type util::symtab* bindings;
	unsigned int id_counter;
}

func void init_env(type env* e, type parse::parser* p);
func void destroy_env(type env* e);

func void init_env_symtab(type util::symtab* s, type util::symtab* parent);
func void destroy_env_symtab(type util::symtab* s);

} } // namespace shadow::tck
